# 목차
1. UTM(Vitural Machine) 설치
2. Ubuntu 설치
 1) SSH 설치 및 설정
 2) backup 디렉토리 생성
 3) user계정 추가하기
 4) user계정에 권한 부여하기
 5) user계정에 backup 디렉토리 생성
 6) backup 디렉토리의 접근 권한 설정
3. 현재시간 동기화
4. 로컬 컴퓨터 접속 테스트
***
## 1. UTM 설치
- https://github.com/utmapp/UTM/releases 에서 UTM 설치파일을 다운한다.

  ![image](https://user-images.githubusercontent.com/92678171/148359924-2cbbfbe6-f866-4148-b63d-f2aaa41243c1.png)

- 위 Asset을 받은 뒤, `UTM.dmg` 파일을 실행하여 설치를 시작한다.
    * 나는 MacOS 버전이 11.4로 최신이 아니라서 그런지, UTM 최신버전인 v3.0.0을 받으면 실행이 불가하여 v2.4.1로 설치하였다.
      ![image](https://user-images.githubusercontent.com/92678171/148360395-5e808145-2dda-497d-a1fb-229d5d739658.png)

***

## 2. Ubuntu 설치
- UTM 실행 후, 새 가상머신 만들기를 클릭한다.
  ![image](https://user-images.githubusercontent.com/92678171/148361097-cb25f05c-98fd-4f59-b7b9-d6cd8b19dd7c.png)
- 정보 항목에 이름은 **Ubuntu** 으로 변경해주고, 스타일은 **운영체제**로 변경해준다.
  ![image](https://user-images.githubusercontent.com/92678171/148362055-9f12ddc2-f055-4014-b580-0cc5a1747a19.png)
- 시스템 항목에 아키택쳐는 **ARM64** 으로 변경해주고, 메모리는 본인 메모리의 절반정도로 설정해준다.
  ![image](https://user-images.githubusercontent.com/92678171/148362404-20720cc6-1736-468e-bd10-ea867c422f1b.png)
- 드라이브 항목에 **New Drive** 를 클릭하고, 크기를 GB단위로 설정해준 뒤 생성한다.
  ![image](https://user-images.githubusercontent.com/92678171/148363627-262d11b9-2c23-410d-8425-105b5ff9b136.png)
- **New Drive** 를 클릭하고, **인터페이스를 USB로 변경한 후, 제거 가능을 체크**합니다. 생성 버튼을 클릭 후 저장해준다.
  ![image](https://user-images.githubusercontent.com/92678171/148363486-46c1285c-8e28-4868-9af2-4352c2c13fc5.png)
- https://ubuntu.com/download/server/arm 에서 **Ubuntu Server for ARM** 를 다운한다.
  ![image](https://user-images.githubusercontent.com/92678171/148364022-7519d75f-7173-4860-9489-1d07ebea4955.png)
- 왼쪽에 생성된 **Ubuntu**를 클릭하고, 아래쪽에 **CD/DVD 항목**을 클릭하여 선택을 선택합 있는 콤보박스를 클릭한 후, 선택을 클릭한다.
  ![image](https://user-images.githubusercontent.com/92678171/148365266-c9299ddd-110b-465c-a3ea-5f4e18629d9c.png)
- 다운받은 Ubuntu Server for ARM의 **ubuntu-20.04.3-live-server-arm64.iso**파일을 열어준 뒤, 우측 상단의 **Run**을 실행시켜준다.
  ![image](https://user-images.githubusercontent.com/92678171/148365554-94b97714-39a5-43ee-bcd7-67173ebec5b0.png)
- 이후, 검정화면의 Ubuntu가 실행되면 `Install Ubuntu Server` 를 선택하여 설치를 시작한다.
- 모든 옵션은 기본값으로 설정하면 되며, 설치 완료 후 재부팅이 필요하다.

~~~
sudo apt update
sudo apt install tasksel
sudo tasksel install ubuntu-desktop
~~~

- 위 명령어를 입력하여 설치한뒤, `$ sudo reboot`로 재부팅하면 데스크탑 환경으로 실행이된다.
  ![image](https://user-images.githubusercontent.com/92678171/148371251-db0cf9f7-52b9-4db9-9e87-f655a2e4ac1f.png)

### 2-1) SSH 설치 및 설정

~~~
sudo apt update
sudo apt install openssh-server
~~~

- Ubuntu 에서 터미널을 실행시켜 위 명령어를 통해, opensh-server 패키지를 설치한다.
  ![image](https://user-images.githubusercontent.com/92678171/148373154-4cacefd5-dbb5-45e2-a0f8-a720399cd1f2.png)
  ![image](https://user-images.githubusercontent.com/92678171/148373232-b9b2cc84-9487-4527-94f0-45ad7065c723.png)

~~~
sudo systemctl status ssh
~~~

- 위 명령어를 통해 설치가 성공적으로 완료됬는지, 실행이 되고 있는지 확인한다.`(active(running) 이면 정상)`
  ![image](https://user-images.githubusercontent.com/92678171/148373528-4b217ff5-b02b-4f7b-8d8c-7f24245518e0.png)

~~~
sudo ufw allow ssh
sudo ufw status(방화벽 상태 확인 명령어)
~~~

- 위 명령어를 통해 방화벽이 SSH를 허용할 수 있도록 설정한다.(방화벽이 비활성화되어 있다면 패스)
  ![image](https://user-images.githubusercontent.com/92678171/148374038-9f8ce017-51f3-44ea-b3ef-3c026e749cf1.png)

### 2-2) backup 디렉토리 생성

- 처음 진행 시, root 계정과 user계정 차이에 대해 인지하지 못하고 있었어서 바로 아래 `sudo`명령어를 통해 backup 디렉토리 생성시도를 했지만 권한 오류가 발생하였다.

~~~
sudo mkdir backup
~~~

> mkdir : cannot creat directory 'backup' : File exists


![](https://images.velog.io/images/dragon9265/post/30304189-bb40-4177-a015-da2847c77a58/image.png)

- 명령어에 대해 제대로 숙지도 못한 상태에서 `vans` 계정으로 로그인 되어있으니, `vans`라는 디렉토리를 만들어줘야 하나? 라는 생각에 무작정 `mkdir -p` 명령어로 만든 뒤 `chmod` 명령어로 764 권한을 부여했던것 같다.
  (..?! 이전 캡쳐 내역이 없어서 잘모르겠지만 `backup` 폴더를 만들어놔서 그랬던건가..? 혼란 그 자체다.)

- 결과적으로 user계정에 `backup` 디렉토리 생성엔 실패하고 root 계정에 생성되었다.

~~~
sudo mkdir -p /home/vans
sudo chmod 764 backup
~~~

![](https://images.velog.io/images/dragon9265/post/4dd057c0-70da-4c6f-9fee-f9a4a9922230/image.png)
### 😵‍💫 (위 결과를 보고 설치부터 다시하기로 결심)

![](https://images.velog.io/images/dragon9265/post/1a4d7d19-f5dc-4e1b-9b0a-51cb37a84d56/image.png)

### 2-3) user계정 추가하기

- 다시 설치부터 진행 후 Ubuntu 설치할때 셋팅했던 `vans`계정은 냅두고 신규 user계정(`bonin`)을 추가해서 진행하기로 했다.

~~~
sudo adduser username
~~~


![](https://images.velog.io/images/dragon9265/post/55fa79aa-8ea3-47b4-b2a0-bbe5b54be176/image.png)

### 2-4) user계정에 권한 부여하기

- user계정으로 전환하고(`su - bonin`) sudo 권한을 주기 위해, 하기와 같이 진행하였지만 권한이 없다고 출력됨.

~~~
sudo su -bonin
sudo usermod -aG bonin
~~~


![](https://images.velog.io/images/dragon9265/post/41facfc6-77d9-4a30-9428-b91e0a720480/image.png)

![](https://images.velog.io/images/dragon9265/post/2ee4adcc-ce1f-4f8a-991d-a5be188e05c5/image.png)

- root계정으로 전환하여 `bonin` 계정에 sudo 권한 부여하는 방향으로 수정

~~~
sudo su root
usermod -aG sudo bonin
~~~

![](https://images.velog.io/images/dragon9265/post/4588ca73-fd54-4d6d-8dbf-a6ce7305e2b8/image.png)

### 2-5) user계정에 backup 디렉토리 생성

- `bonin` 계정에서 `/backup` 디렉토리 생성 시도하였고, 2-1)에서 발생했던 오류없이 원활하게 진행되었다.

~~~
sudo su root
mkdir backup
~~~


![](https://images.velog.io/images/dragon9265/post/baac0a59-e7f1-42eb-bf73-6ee9f1ed7a0f/image.png)

### 2-6) backup 디렉토리의 접근 권한 설정

- `chomod 764` 명령어로, `backup` 디렉토리의 접근권한을 변경해준다.

~~~
chmod 764 backup
su root
ls -al
~~~

![](https://images.velog.io/images/dragon9265/post/864dc7b4-63ef-4f2c-9ae9-4a8859706a07/image.png)

***

## 3. 현재시간 동기화

- 위 과정 후 `date`를 입력해보면 현재시간과 상이한것을 확인할 수 있다. 하기 명령어로 지역과 도시를 설정하여 현재시간을 동기화시킬 수 있다.

~~~
date
su root
sudo apt-get install rdate
~~~

![](https://images.velog.io/images/dragon9265/post/82b88b92-54c9-4051-9180-0417ad9ad75a/image.png)

![](https://images.velog.io/images/dragon9265/post/4b27a8dc-e0ac-49eb-b28d-0fad272aa4ff/image.png)

![](https://images.velog.io/images/dragon9265/post/48011c09-c794-41cc-b80e-a62d7974e7ef/image.png)

## 4. 로컬 컴퓨터 접속 테스트

- Ubunto 에서 `bonin`계정의 ip주소를 확인한다.

~~~
ip a
~~~

![](https://images.velog.io/images/dragon9265/post/3b67d232-51a4-45c3-98fb-99dc0eefd8a8/image.png)

- 맥(로컬컴퓨터)에서 터미널을 실행하여 하기 명령어로 접속을 시도했을때 오류 발생없이 정상적으로 접속된것을 확인할 수 있다.

~~~
ssh username@ip address
~~~

![](https://images.velog.io/images/dragon9265/post/f4b6f91d-317d-47a4-8319-c7d8039c49ea/image.png)

